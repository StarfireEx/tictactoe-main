{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\praveen\\\\OneDrive\\\\react projects\\\\tictactoe-main\\\\tictactoe-main\\\\src\\\\TicTacToe.js\";\nimport \"./styles/tic-tac-toe.scss\";\nimport { GrClose } from \"react-icons/gr\";\nimport { BiCircle } from \"react-icons/bi\";\nimport Loading from \"./Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TicTacToe = _ref => {\n  var _room$players3, _room$players4, _room$players5, _room$players6, _room$players7, _room$players8, _room$players9, _room$players10, _room$players11, _room$board, _room$players12;\n\n  let {\n    socket,\n    room,\n    username\n  } = _ref;\n\n  const playTurn = (i, j) => {\n    var _room$players;\n\n    if (((_room$players = room.players) === null || _room$players === void 0 ? void 0 : _room$players[room.playerTurn].username) === username) {\n      var _room$players2;\n\n      console.log((_room$players2 = room.players) === null || _room$players2 === void 0 ? void 0 : _room$players2[room.playerTurn].username);\n      if (room.playerTurn === \"player1\") socket.emit(\"play-turn\", {\n        position: [i, j],\n        roomId: room.roomId,\n        player: \"player1\"\n      });else socket.emit(\"play-turn\", {\n        position: [i, j],\n        roomId: room.roomId,\n        player: \"player2\"\n      });\n    }\n  };\n\n  const getIcon = cell => {\n    if (cell === \"X\") return /*#__PURE__*/_jsxDEV(GrClose, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 34\n    }, this);else if (cell === \"O\") return /*#__PURE__*/_jsxDEV(BiCircle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 39\n    }, this);\n    return \"\";\n  };\n\n  const getGameResult = () => {\n    if (room.winner) return `${room.players[room.winner].username} won`;else return \"It's a draw\";\n  };\n\n  const playAgain = () => {\n    socket.emit(\"play-again\", {\n      roomId: room.roomId\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tic-tac-toe\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TicTacToe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Room ID \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: room.roomId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), (_room$players3 = room.players) !== null && _room$players3 !== void 0 && _room$players3.player1.username && (_room$players4 = room.players) !== null && _room$players4 !== void 0 && _room$players4.player2.username ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-username\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player player1\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: `${(_room$players5 = room.players) === null || _room$players5 === void 0 ? void 0 : _room$players5.player1.username} ${((_room$players6 = room.players) === null || _room$players6 === void 0 ? void 0 : _room$players6.player1.username) === username ? \" (You)\" : \"\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_room$players7 = room.players) === null || _room$players7 === void 0 ? void 0 : _room$players7.player1.winCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player player2\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: `${(_room$players8 = room.players) === null || _room$players8 === void 0 ? void 0 : _room$players8.player2.username} ${((_room$players9 = room.players) === null || _room$players9 === void 0 ? void 0 : _room$players9.player2.username) === username ? \" (You)\" : \"\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_room$players10 = room.players) === null || _room$players10 === void 0 ? void 0 : _room$players10.player2.winCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), room.gameOver && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"game-result\",\n          children: getGameResult()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this), ((_room$players11 = room.players) === null || _room$players11 === void 0 ? void 0 : _room$players11.player1.username) === username ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Play Again\",\n          className: \"play-again\",\n          onClick: playAgain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Waiting for host...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        children: (_room$board = room.board) === null || _room$board === void 0 ? void 0 : _room$board.map((row, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"board-row\",\n            children: row.map((cell, j) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"board-cell\",\n                value: cell,\n                onClick: () => playTurn(i, j),\n                children: getIcon(cell)\n              }, j, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 45\n              }, this);\n            })\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [(_room$players12 = room.players) === null || _room$players12 === void 0 ? void 0 : _room$players12[room.playerTurn].username, \"'s turn\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Turns played \", room.turns]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TicTacToe;\nexport default TicTacToe;\n\nvar _c;\n\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"sources":["C:/Users/praveen/OneDrive/react projects/tictactoe-main/tictactoe-main/src/TicTacToe.js"],"names":["GrClose","BiCircle","Loading","TicTacToe","socket","room","username","playTurn","i","j","players","playerTurn","console","log","emit","position","roomId","player","getIcon","cell","getGameResult","winner","playAgain","player1","player2","winCount","gameOver","board","map","row","turns"],"mappings":"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","sourcesContent":["import \"./styles/tic-tac-toe.scss\";\r\nimport { GrClose } from \"react-icons/gr\";\r\nimport { BiCircle } from \"react-icons/bi\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst TicTacToe = ({ socket, room, username }) => {\r\n    const playTurn = (i, j) => {\r\n        if (room.players?.[room.playerTurn].username === username) {\r\n            console.log(room.players?.[room.playerTurn].username);\r\n            if (room.playerTurn === \"player1\")\r\n                socket.emit(\"play-turn\", {\r\n                    position: [i, j],\r\n                    roomId: room.roomId,\r\n                    player: \"player1\",\r\n                });\r\n            else\r\n                socket.emit(\"play-turn\", {\r\n                    position: [i, j],\r\n                    roomId: room.roomId,\r\n                    player: \"player2\",\r\n                });\r\n        }\r\n    };\r\n\r\n    const getIcon = (cell) => {\r\n        if (cell === \"X\") return <GrClose />;\r\n        else if (cell === \"O\") return <BiCircle />;\r\n        return \"\";\r\n    };\r\n\r\n    const getGameResult = () => {\r\n        if (room.winner) return `${room.players[room.winner].username} won`;\r\n        else return \"It's a draw\";\r\n    };\r\n\r\n    const playAgain = () => {\r\n        socket.emit(\"play-again\", {roomId: room.roomId});\r\n    };\r\n\r\n    return (\r\n        <div className=\"tic-tac-toe\">\r\n            <h1>TicTacToe</h1>\r\n            <h2>\r\n                Room ID <span>{room.roomId}</span>\r\n            </h2>\r\n            {room.players?.player1.username &&\r\n            room.players?.player2.username ? (\r\n                <>\r\n                    <div className=\"player-username\">\r\n                        <div className=\"player player1\">\r\n                            <p>{`${room.players?.player1.username} ${\r\n                                room.players?.player1.username === username\r\n                                    ? \" (You)\"\r\n                                    : \"\"\r\n                            }`}</p>\r\n                            <span>{room.players?.player1.winCount}</span>\r\n                        </div>\r\n                        <div className=\"player player2\">\r\n                            <p>{`${room.players?.player2.username} ${\r\n                                room.players?.player2.username === username\r\n                                    ? \" (You)\"\r\n                                    : \"\"\r\n                            }`}</p>\r\n                            <span>{room.players?.player2.winCount}</span>\r\n                        </div>\r\n                    </div>\r\n                    {room.gameOver && (\r\n                        <>\r\n                            <h2 className=\"game-result\">{getGameResult()}</h2>\r\n                            {\r\n                                room.players?.player1.username === username\r\n                                ?\r\n                                <input\r\n                                    type=\"button\"\r\n                                    value=\"Play Again\"\r\n                                    className=\"play-again\"\r\n                                    onClick={playAgain}\r\n                                />\r\n                                :\r\n                                <p>Waiting for host...</p>\r\n                            }\r\n                        </>\r\n                    )}\r\n                    <div className=\"board\">\r\n                        {room.board?.map((row, i) => {\r\n                            return (\r\n                                <div className=\"board-row\" key={i}>\r\n                                    {row.map((cell, j) => {\r\n                                        return (\r\n                                            <div\r\n                                                className=\"board-cell\"\r\n                                                key={j}\r\n                                                value={cell}\r\n                                                onClick={() => playTurn(i, j)}\r\n                                            >\r\n                                                {getIcon(cell)}\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                    <p>{room.players?.[room.playerTurn].username}'s turn</p>\r\n                    <p>Turns played {room.turns}</p>\r\n                </>\r\n            ) : (\r\n                <Loading />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TicTacToe;\r\n"]},"metadata":{},"sourceType":"module"}